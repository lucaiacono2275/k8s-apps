{{ $hostname := print .Release.Name "." .Values.envconfig.ingress.domain }}
image:
  repository: lucaiacono/apache-smb-svg
  tag: 24.0.1
  pullPolicy: Always

ingress:
  enabled: true
  annotations: 
    nginx.ingress.kubernetes.io/proxy-body-size: 4G
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: {{ .Values.envconfig.clusterIssuerProd }}
    nginx.ingress.kubernetes.io/server-snippet: |-
      server_tokens off;
      proxy_hide_header X-Powered-By;

      location ^~ /.well-known {
        # The rules in this block are an adaptation of the rules
        # in `.htaccess` that concern `/.well-known`.

        location = /.well-known/carddav { return 301 /remote.php/dav/; }
        location = /.well-known/caldav  { return 301 /remote.php/dav/; }

        location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
        location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

        # Let Nextcloud's API for `/.well-known` URIs handle all other
        # requests by passing them to the front-end controller.
        return 301 /index.php$request_uri;
      }

      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
      }
      location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
        deny all;
      }
      location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
        deny all;
      }
{{- if .Values.envconfig.ingress.tls.enabled }}
  tls:
    - secretName: {{ .Release.Name }}-tls
      hosts:
        - {{ $hostname }}
{{- end }}     

  labels: {}
  path: /
  pathType: Prefix

phpClientHttpsFix:
  enabled: true
  protocol: https

nextcloud:
  host: {{ $hostname }}

  existingSecret:
    enabled: true
    secretName: {{ .Release.Name }}-secret

  mail:
    enabled: false
    fromAddress: nextcloud
    domain: ihsws.it
    smtp:
      host: postfix-mail.postfix.svc.cluster.local
      #secure: ssl
      port: 587
      authtype: None

  configs: 
    settings.config.php: |-
      <?php
      $CONFIG = array (
        'default_phone_region' => 'IT'
      );


internalDatabase:
  enabled: false

##
## External database configuration
##
externalDatabase:
  enabled: false

  ## Database user
  user: nextcloud

  ## Database name
  database: nextcloud

  ## Use a existing secret
  existingSecret:
    enabled: true
    secretName: mariadb-nextcloud-secret
    usernameKey: mariadb-username
    passwordKey: mariadb-password

##
## MariaDB chart configuration
##
mariadb:
  ## Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
  enabled: true

  auth:
    database: nextcloud
    username: nextcloud

    existingSecret: mariadb-nextcloud-secret

  architecture: standalone

  primary:
    persistence:
      enabled: true
      storageClass: local-path
      accessMode: ReadWriteOnce
      size: 8Gi  

redis:
  enabled: true
  usePassword: false

## Cronjob to execute Nextcloud background tasks
## ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#webcron
##
cronjob:
  enabled: true

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  # Nextcloud Data (/var/www/html)
  enabled: true
  ## nextcloud data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: local-path

  accessMode: ReadWriteOnce
  size: 8Gi

  ## Use an additional pvc for the data directory rather than a subpath of the default PVC
  ## Useful to store data on a different storageClass (e.g. on slower disks)
  nextcloudData:
    enabled: true
    #subPath: 
    annotations: {}
    storageClass: nfs-client-w
    # existingClaim:
    accessMode: ReadWriteMany
    size: 8Gi  

livenessProbe:
  enabled: true
readinessProbe:
  enabled: true
